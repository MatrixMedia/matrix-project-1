const path = require('path');
const config = {

    IS_LOCAL: true,
    LOG_FILE: path.join(__dirname, '../', 'log', 'log.txt'),
    // Add more to this to escape the auth checking when requesting
    EXCEPT_AUTH_REQUEST: [
        'adminLogin', 
        'registerByPhone', 
        'resendOtp', 
        'adminForgotPassword', 
        'adminResetPassword',
        'getAllUsers', 
        'createUser', 
        'adminForgotPassword', 
        'adminResetPassword', 
        'getCountryCodes', 
        'testSMS', 
        'createFeedback', 
        'generateS3UploadURL', 
        'verifyOtp', 
        'passiveUserInvitationDetails', 
        'updatePassiveUserInvitationDetails', 
        'invitationResponse', 
        'testFunction',
        'createCommunityFeedback', 
        'getState',
        'getCommunityHomePageOverviewByID',
        'getFeaturedCommunities',
        'getMyCommunityEvents',
        'getAllAnnouncementOrganization',
        'getCommunityVideos',
        'getMyCommunitiesSettingsView',
        'getCommunityBasicDetails',
        'communityMemberRoleFilter',
        'getMyCommunityGroup',
        'getVideoDetails',
        'getCommunityIdFromSlug',
        'getCommunityPayments',
        'myCommunityOrgGlobalSearch',
        'userDotNetSignUp',
        'getAllBlogs',
        'getBolgsById',
        'orgImageListEventWise',
        'orgImageListDateWise',
        'getAllUploadImage',
        'getSangaraahiCommunity',
        'acceptOrRejectOrgEvent',
        'getMyCommunityEventByID',
        'webVisitorPhoneVerify',
        'webVisitorPhoneOTPVerify'

    ],
    EXCEPT_AUTH_LOGIN_CHECK: [
        'verifyOtp', 
        'registerUserDetails', 
        'adminForgotPassword', 
        'adminResetPassword', 
        'testSMS',
        'generateS3UploadURL',
        'passiveUserInvitationDetails',
        'updatePassiveUserInvitationDetails',
        'invitationResponse',
        'testFunction',
        'createCommunityFeedback',
        'getState',
        'getCommunityHomePageOverviewByID',
        'getFeaturedCommunities',
        'getMyCommunityEvents',
        'getAllAnnouncementOrganization',
        'getCommunityVideos',
        'getMyCommunitiesSettingsView',
        'getCommunityBasicDetails',
        'communityMemberRoleFilter',
        'getMyCommunityGroup',
        'getVideoDetails',
        'getCommunityIdFromSlug',
        'getCommunityPayments',
        'myCommunityOrgGlobalSearch',
        'userDotNetSignUp',
        'getAllBlogs',
        'getBolgsById',
        'orgImageListEventWise',
        'orgImageListDateWise',
        'getAllUploadImage',
        'getSangaraahiCommunity',
        'acceptOrRejectOrgEvent',
        'getMyCommunityEventByID',
        'webVisitorPhoneVerify',
        'webVisitorPhoneOTPVerify'
    ],
    // Routes that only has admin permission
    ADMIN_PERMISSION_ROUTES: [
        'addExpiryDateToCommunity', 
        'approveCommunity',
        'publicityPageStatusChange',
        'orgHomePageAdminApproval',
        'getOrgPageAdminApproval',
        'videoSettingsAdminApproval',
        'aboutPageAdminApproval',
        'getAllCommunitiesSmsEmailCredit',
        'updateCommunitySmsEmailCredit',
        'addCommunitySmsEmailCredit',
        'updateCommunityFeaturedStatus',
        'updatefreezePaneStatus',
        'adminLogApproval',
        'adminLogApprovalList',
        'bankDetailsAdminStatusChange',
        'addAdminSmsEmailCredit',
        'updateEventPaymentStatus',
        'addOrUpdateDistance',
        // 'getOrgPaymentPageAdminApproval'
    ],
    //User selected organization permission
    SELECTED_ORGANIZATION_PERMISSION_ROUTES: [
        'communityActivePassiveMemberList',
        'findUserByPhoneMail',
        'onboardPassiveMember',
        'resendOnboardingInvitation',
        'onboardExistUser',
        'getMyCommunitiesView',
        'updateCommunityView',
        'groupOrgStatusChange',
        'updateMyCommunityGroup',
        'getMyCommunityGroupByID',
        'myCommunityCreateGroup',
        'deleteMyCommunityGroup',
        'myCommunityEventStatusChange',
        'myCommunityAnnouncementStatusChange',
        'myCommunitydeleteEvent',
        'myCommunityupdateEvent',
        'createMyCommunityEvent',
        'getAllCommunityFeedbacks',
        'addOrgGlobalSettings',
        'createAnnouncementOrganization',
        'updateHomePageOverview',
        'updateCommunityAnnouncementSettings',
        'addOrUpdateVideo',
        'updateCommunityAboutUsSettings',
        'updateMyCommunityAnnouncement',
        "addOrUpdatepayment",
        "getmyCommunityDashboardList",
        "viewedFeedbackStatus",
        "communityReplyFeedback",
        'myCommunityDotNetGlobalSearch',
        'resetVideo',
        'createEventTask',
        'updateEventTask',
        'deleteEventTask',
        'createEventSupplierManagement',
        'updateEventSupplierManagement',
        'createBlogs',
        'uploadImage',
        'editCurrency',
        'removeGroupOrMemberEvent',
        // 'getEventPaymentByIdApp',
        'cancelEvent',
        'removeOrgGroupMember',
        // 'updateEventPayment',
        'getEventPaymentCardDetails',
        'getEventsCardDetails',
        'promoteOrDemoteCommunityMember',
        'addCommunityRole',
        'getCommunityCreatedRoles',
        'assignUsherRole'
    ],
    SELECTED_APP_COMMUNITY_PERMISSION_ROUTES: [
        // 'getAllNotifications',
        // 'notificationSettings',
        // 'getViewEvents',
        // 'acceptOrRejectEvent',
        // 'eventAttendingAlert',
        // 'acceptOrRejectRecurringEvent',
        // 'joinOrPromoteCommunity',
        // 'getEventPaymentByIdApp',
        // 'getAllUploadedUserImage',
        // 'getUpcomingRecurringEvent',
        // 'getEventDetailsForApp',
        // 'getAllBlogsForApp',
        // 'getAllAnnouncementOrganization',
        // 'getAllEventTaskForApp',
        // 'getAllEventSupplierManagementForApp',
        // 'getContacts',
        // 'getContactsMapList',
        // 'communityMemberListRollWise',
        // 'communityUserRole',
        // 'getMyRelatedCommunities',
        // 'getEventDetailsForPublic',
        // 'getEventDetails',
        
        'uploadImage',
        'deleteImage',
        'cancelRsvp',
        'getBolgsById',
        'acceptOrRejectTask',
        'acceptOrRejectSupplierManagement',
        'selfVolunteerSupplier',
        'selfVolunteer',
        'addOrRemoveFavouriteContact',
        'removeMyContact',
        'addToMyContact',
        'bulkContactImport',
        'promoteOrDemoteAppMember',
        'leaveCommunity',
        'getEventPaymentByIdApp',
        'updateEventPayment',
    ]
};

module.exports = config;